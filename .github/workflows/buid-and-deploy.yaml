# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  push:
    branches: [ develop, main ]

env:
  REGISTRY: ghcr.io/constellationbrands

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      version_tag: ${{ steps.version_tag.outputs.version_tag }}
      deploy_path: ${{ steps.deploy_folder.outputs.deploy_path }}
      repo_name: ${{steps.get_repo.outputs.name}}
      branch_name: ${{steps.get_branch.outputs.name}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine tag version
        id: version_timestamp
        run: |
          echo "VERSION=${REF#refs/heads/}-$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        env:
          REF: ${{ github.ref }}

      - name: Replace tag version slashes with dashes
        id: version_tag
        run: |
          echo "VERSION_TAG=$(echo ${{ steps.version_timestamp.outputs.VERSION }} | sed 's,/,\-,g')" >> $GITHUB_OUTPUT

      - name: Get Repo name 
        id: get_repo
        run: |
          echo "name=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//" | sed -r 's/[_]+/-/g')" >> $GITHUB_OUTPUT
        env:
          REF: ${{ github.ref }}

      - name: Get branch name
        id: get_branch
        run: |
          echo "name=${REF#refs/heads/}" >> $GITHUB_OUTPUT
        env:
          REF: ${{ github.ref }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:docker"
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.get_repo.outputs.name }}:${{ steps.version_tag.outputs.version_tag }}
          target: github_app

      - name: Get deploy folder based on branch
        id: deploy_folder
        run: |
          if [[ "$REF" == 'refs/heads/main' ]]
          then
              echo "deploy_path=prod" >> $GITHUB_OUTPUT
          elif [[ "$REF" == 'refs/heads/develop' ]]
          then
              echo "deploy_path=dev" >> $GITHUB_OUTPUT
          fi
        env:
          REF: ${{ github.ref }}

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    outputs:
      final_image_name: ${{ steps.gen_image_name.outputs.final_image_name }}

    steps:
      - uses: actions/checkout@v3.5.2
        with:
          repository: ConstellationBrands/cd-genai
          token: ${{ secrets.CD_RELEASE_TOKEN }}
          ref: main

      - name: Install yq
        id: setup-yq
        uses: yokawasa/action-setup-kube-tools@v0.9.3
        with:
          yq: 'v4.33.3'    

      - name: Generate Image name 
        id: gen_image_name
        run: |
          echo "final_image_name=$(echo ghcr.io/constellationbrands/${{needs.build-and-push.outputs.repo_name}}:${{needs.build-and-push.outputs.version_tag}})" >> $GITHUB_OUTPUT

      - name: Find and Replace
        continue-on-error: true
        run: yq -i .'spec.template.spec.containers.[0].image = "${{steps.gen_image_name.outputs.final_image_name}}"' ${{needs.build-and-push.outputs.repo_name}}/${{needs.build-and-push.outputs.deploy_path}}/version.yaml      
      
      - uses: EndBug/add-and-commit@v9.1.1
        with:
          message: update image version ${{needs.build-and-push.outputs.version_tag}}
          committer_name: github-actions
          committer_email: github-actions@github.com